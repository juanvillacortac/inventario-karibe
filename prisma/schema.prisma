generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  image     String?
  username  String   @unique
  active    Boolean  @default(true)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  account   Account?
  buys      Buy[]    @relation("buy_user")
  sells     Sell[]   @relation("sell_user")
}

model Account {
  id     Int     @id @default(autoincrement())
  userId Int     @unique(map: "Account_userId_unique")
  hash   String?
  user   User    @relation(fields: [userId], references: [id])
}

model ProductCategory {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  active    Boolean   @default(true)
  createdAt DateTime  @default(now())
  products  Product[]
}

model Product {
  id            Int             @id @default(autoincrement())
  categoryId    Int
  sku           String          @unique
  name          String
  max           Int             @default(70)
  min           Int             @default(25)
  price         Float
  providerPrice Float
  description   String?
  stock         Int
  active        Boolean         @default(true)
  createdAt     DateTime        @default(now())
  category      ProductCategory @relation(fields: [categoryId], references: [id])
  buyDetails    BuyDetail[]
  sellDetails   SellDetail[]

  @@index([categoryId], map: "Product_categoryId_fkey")
}

model Buy {
  id         Int         @id @default(autoincrement())
  priceTotal Float
  userId     Int
  createdAt  DateTime    @default(now())
  user       User        @relation("buy_user", fields: [userId], references: [id])
  details    BuyDetail[]

  @@index([userId], map: "Buy_userId_fkey")
}

model BuyDetail {
  id        Int      @id @default(autoincrement())
  buyId     Int
  productId Int
  price     Float
  quantity  Int
  createdAt DateTime @default(now())
  buy       Buy      @relation(fields: [buyId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])

  @@index([buyId], map: "BuyDetail_buyId_fkey")
  @@index([productId], map: "BuyDetail_productId_fkey")
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  dni       String   @unique
  createdAt DateTime @default(now())
  sells     Sell[]
}

model Sell {
  id         Int          @id @default(autoincrement())
  priceTotal Float
  userId     Int
  clientId   Int
  createdAt  DateTime     @default(now())
  client     Client       @relation(fields: [clientId], references: [id])
  user       User         @relation("sell_user", fields: [userId], references: [id])
  details    SellDetail[]

  @@index([clientId], map: "Sell_clientId_fkey")
  @@index([userId], map: "Sell_userId_fkey")
}

model SellDetail {
  id        Int      @id @default(autoincrement())
  sellId    Int
  productId Int
  price     Float
  quantity  Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  sell      Sell     @relation(fields: [sellId], references: [id])

  @@index([productId], map: "SellDetail_productId_fkey")
  @@index([sellId], map: "SellDetail_sellId_fkey")
}

enum Role {
  USER
  ADMIN
}

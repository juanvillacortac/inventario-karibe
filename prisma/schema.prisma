// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  image     String?
  username  String   @unique
  account   Account?
  active    Boolean  @default(true)
  role      Role     @default(USER)
  createdAt DateTime @default(now())
}

model Account {
  id     Int     @id @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  hash   String?
}

model ProductCategory {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
  active    Boolean   @default(true)
  createdAt DateTime  @default(now())
}

model Consumable {
  id          Int             @id @default(autoincrement())
  category    ConsumableCategory @relation(fields: [categoryId], references: [id])
  categoryId  Int
  sku         String          @unique
  name        String
  product     Decimal
  description String?
  buys  Buy[]
  sells  Sell[]
  active      Boolean         @default(true)

}

model ConsumableCategory{
  id        Int  @id @default(autoincrement())
  name      String
  consumables Consumable[]
  active    Boolean  @default(true)
  createdAt DateTime @default(now())

}

model Product {
  id          Int             @id @default(autoincrement())
  category    ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId  Int
  sku         String          @unique
  name        String
  product     Decimal
  description String?
  active      Boolean         @default(true)
  buys  Buy[]
  sells  Sell[]
}

model Provider {
  id        Int      @id @default(autoincrement())
  name      String
  rif       String   @unique
  createdAt DateTime @default(now())
  active    Boolean  @default(true)
  buys      Buy[]
}

model Buy {
  id           Int         @id @default(autoincrement())
  // code
  total        Decimal 
  product      Product    @relation(fields: [productId], references: [id])
  productId    Int
  consumable   Consumable @relation(fields: [consumableId], references: [id])
  consumableId Int
  provider     Provider    @relation(fields: [providerId], references: [id])
  providerId   Int
  details      BuyDetail[]
  createdAt    DateTime    @default(now())
}

model BuyDetail {
  id        Int     @id @default(autoincrement())
  buy       Buy     @relation(fields: [buyId], references: [id])
  buyId     Int
  price     Decimal
  quantity  Int
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  dni       String   @unique
  sells     Sell[]
  createdAt DateTime @default(now())
}

model Sell {
  id         Int          @id @default(autoincrement())
  total Decimal
  product      Product    @relation(fields: [productId], references: [id])
  productId   Int
  consumable   Consumable @relation(fields: [consumableId], references: [id])
  consumableId Int
  client     Client       @relation(fields: [clientId], references: [id])
  clientId   Int
  details    SellDetail[]
  createdAt  DateTime     @default(now())
}

model SellDetail {
  id        Int     @id @default(autoincrement())
  sell      Sell    @relation(fields: [sellId], references: [id])
  sellId    Int
  price     Decimal
  quantity  Int
}
